{"version":3,"file":"static/js/180.012a6298.chunk.js","mappings":"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","sources":["components/Header/buckets/CategoryName/categoryName.js","queries/categoryQuery.js","components/Header/buckets/CurrencySwitch/currencySwitch.js","queries/currencyQuery.js","components/Header/buckets/CartItem/cartItem.js","components/Header/header.js","pages/Products/buckets/productAttribute.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeCategory } from \"../../../../slices/categoryNameSlice\";\nimport \"./categoryName.css\";\nimport { Link } from \"react-router-dom\";\nimport getSvg from \"../../../../svg/getSvg\";\n\nclass CategoryName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: 0,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (e, index) => {\n    this.props.dispatch(changeCategory(e.target.innerHTML.toLowerCase()));\n    this.setState({ activeId: index });\n  };\n\n  render() {\n    const {\n      data: { categories, loading },\n    } = this.props;\n\n    if (loading) {\n      return null\n    } else {\n      return categories.map(({ name }, index) => (\n        <Link\n          to={`/${name}`}\n          className={`category_name ${\n            this.state.activeId === index ? \"active\" : \"\"\n          }`}\n          key={index}\n          onClick={(e) => this.handleClick(e, index)}\n        >\n          {name.toUpperCase()}\n        </Link>\n      ));\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categoryName.value,\n});\n\nexport default connect(mapStateToProps)(CategoryName);\n","import { graphql } from \"@apollo/client/react/hoc\";\nimport { gql } from \"@apollo/client\";\nimport CategoryName from \"../components/Header/buckets/CategoryName/categoryName\";\n\n\nexport default graphql(gql`\n  query {\n    categories {\n      name\n    }\n  }\n`)(CategoryName);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { currencySwitcher } from \"../../../../slices/currencySlice\";\nimport \"./currencySwitch.css\";\nimport getSvg from \"../../../../svg/getSvg\";\n\nclass CurrencySwitch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n    };\n    /*ref instances*/\n    this.menuRef = React.createRef();\n    this.buttonRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"click\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClickOutside);\n  }\n  handleClickOutside(event) {\n    if (this.menuRef.current && this.buttonRef.current) {\n      if (\n        !this.menuRef.current.contains(event.target) &&\n        !this.buttonRef.current.contains(event.target)\n      ) {\n        this.setState({ isActive: false });\n      }\n    }\n  }\n  render() {\n    const {\n      data: { currencies, loading },\n    } = this.props;\n    if (loading) {\n      return null\n    } else {\n      return (\n        <>\n          <div className=\"currency_switch_container\">\n            <div\n              onClick={() => this.setState({ isActive: !this.state.isActive })}\n              ref={this.buttonRef}\n              className=\"svg\"\n              style={{ margin: `${1}rem 0 0 ${5}rem` }}\n            >\n              {this.props.currency.symbol}\n              <svg\n                width=\"8\"\n                height=\"8\"\n                viewBox=\"0 0 8 4\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d={\n                    this.state.isActive\n                      ? \"M1 3.5L4 0.5L7 3.5\"\n                      : \"M1 0.5L4 3.5L7 0.5\"\n                  }\n                  stroke=\"black\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </div>\n            <ul\n              ref={this.menuRef}\n              className=\"currency_dropdown\"\n              style={{ opacity: this.state.isActive ? \"1\" : \"0\" }}\n            >\n              {currencies.map(({ label, symbol }, index) => (\n                <li\n                  className=\"currency_list\"\n                  key={index}\n                  onClick={() => {\n                    this.props.dispatch(currencySwitcher({ symbol, label }));\n                    this.setState({ isActive: false });\n                  }}\n                >\n                  {symbol} {label}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currency: state.currency.activeCurrency,\n});\nexport default connect(mapStateToProps)(CurrencySwitch);\n","import { graphql } from \"@apollo/client/react/hoc\";\nimport { gql } from \"@apollo/client\";\nimport CurrencySwitch from \"../components/Header/buckets/CurrencySwitch/currencySwitch.js\";\n\nexport default graphql(gql`\n  query {\n    currencies {\n      label\n      symbol\n    }\n  }\n`)(CurrencySwitch);\n","import React, { Component } from \"react\";\nimport getSvg from \"../../../../svg/getSvg\";\nimport { connect } from \"react-redux\";\nimport { addCart } from \"../../../../slices/cartSlice\";\nimport \"./cartItem.css\";\nimport ProductAttribute from \"../../../../pages/Products/buckets/productAttribute\";\nimport { Link } from \"react-router-dom\";\n\nclass CartItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      qty: this.props.cartfil.length,\n    };\n    /*ref instances*/\n    this.minicartRef = React.createRef();\n    this.cartbuttonRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleCartClick = this.handleCartClick.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n  \n    if (this.minicartRef.current && this.cartbuttonRef.current) {\n      if (\n        !this.minicartRef.current.contains(event.target) &&\n        !this.cartbuttonRef.current.contains(event.target)\n      ) {\n        this.setState({ open: false });\n        document.body.style.overflow = \"scroll\";\n      }\n    }\n  }\n  handleCartClick() {\n    this.setState({ open: !this.state.open });\n    if(this.state.open === false){\n      document.body.style.overflow = \"hidden\";\n    }\n    else {\n      document.body.style.overflow = \"scroll\";\n    }\n  }\n\n  render() {\n    /*create global variabe*/\n    window.cartTotal = [];\n    window.totalAmount = 0.0;\n    return (\n      <>\n        <div>\n          <div\n            className=\"shop_cart\"\n            onClick={this.handleCartClick}\n            ref={this.cartbuttonRef}\n          >\n            <div\n              className=\"badge\"\n              style={{ opacity: this.props.qty <= 0 ? 0 : 1 }}\n            >\n              <div className=\"badge_text\">\n                {this.props.qty > 9 ? \"9+\" : this.props.qty}\n              </div>\n            </div>\n            <img src={getSvg.cart} alt=\"cart\" className=\"cart\" />\n          </div>\n          <div\n            className=\"overlay\"\n            style={{ display: this.state.open ? \"block\" : \"none\" }}\n          >\n            <div className=\"mini_cart\" ref={this.minicartRef}>\n              <p>\n                <span className=\"bold_text\">My bag</span>,{\" \"}\n                {this.props.cartfil.length} item(s)\n              </p>\n\n              <div className=\"cartItem_maxcontainer\">\n                {this.props.cartfil.map(\n                  ({\n                    name,\n                    quantity,\n                    brand,\n                    img,\n                    attributes,\n                    attributeName,\n                    prices,\n                  }) => {\n                    /*filter function to get amount*/\n                    let cartAmount = prices.filter(\n                      (price) =>\n                        price.currency.symbol === this.props.currency.symbol\n                    )[0];\n                    const amount = cartAmount.amount * quantity;\n                    window.cartTotal.push(amount);\n                    const cartTotAmount = window.cartTotal.reduce(function (\n                      acc,\n                      obj\n                    ) {\n                      return acc + obj;\n                    },\n                    0);\n                    window.totalAmount = cartTotAmount.toFixed(2);\n\n                    const quanincre = attributeName;\n                    const quandecre = attributeName;\n                    const quanincrename = name;\n                    const quandecrename = name;\n                    const textindex = this.props.attrop;\n\n                    return (\n                      <>\n                        <div className=\"cartItem_Container\">\n                          <div>\n                            <h2 className=\"cart_name\">{name}</h2>\n                            <h3 className=\"cart_brand\">{brand}</h3>\n                            <h4 className=\"cart_amount\">\n                              {cartAmount.currency.symbol}\n                              {cartAmount.amount}\n                            </h4>\n                            {attributes?.map(({ type, name, items }) => (\n                              <>\n                                <div className=\"cartItem_innerContainer\"></div>\n                                <ProductAttribute\n                                  name={name}\n                                  item={items}\n                                  type={type}\n                                  initial={attributeName}\n                                />\n                              </>\n                            ))}\n                          </div>\n                          <div className=\"item_count_container\">\n                            <button\n                              className=\"item_count\"\n                              onClick={() =>\n                                this.props.dispatch(\n                                  addCart({\n                                    quanincre,\n                                    textindex,\n                                    quanincrename,\n                                  })\n                                )\n                              }\n                            >\n                              +\n                            </button>\n                            <div className=\"item_quantity\">{quantity}</div>\n                            <button\n                              className=\"item_count\"\n                              onClick={() =>\n                                this.props.dispatch(\n                                  addCart({\n                                    quandecre,\n                                    textindex,\n                                    quandecrename,\n                                  })\n                                )\n                              }\n                            >\n                              -\n                            </button>\n                          </div>\n                          <div>\n                            <img\n                              src={img[0]}\n                              alt=\"cart_image\"\n                              className=\"cart_image\"\n                            />\n                          </div>\n                        </div>\n                      </>\n                    );\n                  }\n                )}\n              </div>\n              <div className=\"cartItem_totalCon\">\n                <span>Total:</span>\n                <span className=\"cartItem_amount\">\n                  {this.props.currency.symbol}\n                  {window.totalAmount}\n                </span>\n              </div>\n              <div className=\"cartItem_button\">\n                <button className=\"cart_button_one\">\n                  <Link to={\"/cart\"} className=\"cartItem_link\">\n                    VIEW BAG\n                  </Link>\n                </button>\n                <button className=\"cart_button_two\">CHECKOUT</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart.value,\n  cartfil: state.cart.filt,\n  currency: state.currency.activeCurrency,\n  jet: state.cart.geto,\n  activeCategory: state.categoryName.value,\n  qty: state.cart.cartQuantity,\n  attrop: state.cart.attrid,\n});\n\nexport default connect(mapStateToProps)(CartItem);\n","import React, { Component } from \"react\";\nimport getSvg from \"../../svg/getSvg\";\nimport CategoryName from \"../../queries/categoryQuery\";\nimport Currencyswitch from \"../../queries/currencyQuery\";\nimport CartItem from \"./buckets/CartItem/cartItem\";\nimport \"./header.css\";\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header_container\">\n        {/* category name grid*/}\n\n        <div className=\"header_grid_one\">\n          <div className=\"categoryname\">\n            <CategoryName />\n          </div>\n        </div>\n\n        {/*Logo Grid */}\n        <div className=\"header_grid_two\">\n          <img src={getSvg.logo} alt=\"logo\" className=\"header_logo\" />\n        </div>\n\n        {/*Cart Grid */}\n        <div className=\"header_grid_three\">\n          <Currencyswitch />\n          <CartItem />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { addCart } from \"../../../slices/cartSlice\";\nimport \"./productAttribute.css\";\nimport { connect } from \"react-redux\";\n\nclass ProductAttribute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeText: this.props.initial,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ activeText: this.props.initial });\n    }, 1000);\n  }\n  handleClick = (index) => {\n    const textindex = index;\n\n    this.setState({ activeText: textindex });\n\n    this.props.dispatch(addCart({ textindex }));\n  };\n  render() {\n    if (this.props.type === \"text\") {\n      return (\n        <>\n          <span>{this.props.name}:</span>\n          <div className=\"container\">\n            {this.props.item.map(({ value }, index) => {\n              return (\n                <>\n                  <div key={index}>\n                    <div\n                      className={`text_box ${\n                        this.state.activeText === index ? \"active_text\" : \"\"\n                      }`}\n                      onClick={() => this.handleClick(index)}\n                    >\n                      {value}\n                    </div>\n                  </div>\n                </>\n              );\n            })}\n          </div>\n        </>\n      );\n    }\n    if (this.props.type === \"swatch\")\n      return (\n        <>\n          <span>{this.props.name}:</span>\n          <div className=\"container\">\n            {this.props.item.map(({ value }, index) => {\n              return (\n                <>\n                  <div\n                    className=\"swatch_box\"\n                    style={{\n                      background: value,\n\n                      border:\n                        value === \"white\" || value === \"#FFFFFF\"\n                          ? `${1}px solid black`\n                          : \"none\",\n                      outlineStyle: \"solid\",\n                      outlineColor:\n                        this.state.activeText === index ? \"#5ECE7B\" : \"#fff\",\n                      outlineOffset: `${2}px`,\n                      outlineWidth: `${2}px`,\n                    }}\n                    key={index}\n                    onClick={() => this.handleClick(index)}\n                  ></div>\n                </>\n              );\n            })}\n          </div>\n        </>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  atttr: state.cart.attrid,\n});\n\nexport default connect(mapStateToProps)(ProductAttribute);\n"],"names":["CategoryName","props","handleClick","e","index","dispatch","changeCategory","target","innerHTML","toLowerCase","setState","activeId","state","bind","this","data","categories","loading","map","name","to","className","onClick","toUpperCase","Component","connect","activeCategory","categoryName","value","graphql","gql","CurrencySwitch","isActive","menuRef","React","buttonRef","handleClickOutside","document","addEventListener","removeEventListener","event","current","contains","currencies","ref","style","margin","currency","symbol","width","height","viewBox","fill","xmlns","d","stroke","strokeLinecap","strokeLinejoin","opacity","label","currencySwitcher","activeCurrency","CartItem","open","qty","cartfil","length","minicartRef","cartbuttonRef","handleCartClick","body","overflow","window","cartTotal","totalAmount","src","getSvg","alt","display","quantity","brand","img","attributes","attributeName","cartAmount","prices","filter","price","amount","push","cartTotAmount","reduce","acc","obj","toFixed","quanincre","quandecre","quanincrename","quandecrename","textindex","attrop","type","items","item","initial","addCart","cart","filt","jet","geto","cartQuantity","attrid","Header","ProductAttribute","activeText","setTimeout","background","border","outlineStyle","outlineColor","outlineOffset","outlineWidth","atttr"],"sourceRoot":""}