{"version":3,"file":"static/js/591.1c539952.chunk.js","mappings":"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","sources":["pages/Cart/Cart.js","pages/Products/buckets/productAttribute.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCart } from \"../../slices/cartSlice\";\nimport ProductAttribute from \"../Products/buckets/productAttribute\";\nimport \"./cart.css\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carousel: 0,\n    };\n    this.handleCarouselClick = this.handleCarouselClick.bind(this);\n  }\n\n  handleCarouselClick(type) {\n    this.setState((prevState) => {\n      return {\n        carousel:\n          type === \"add\" ? prevState.carousel + 1 : prevState.carousel - 1,\n      };\n    });\n  }\n\n  render() {\n    /*create global variabe*/\n    window.cartPageTotal = [];\n    window.cartPageAmount = 0.0;\n\n    return (\n      <>\n        <div className=\"cartpageheader_name\">CART</div>\n\n        {this.props.cartfil.map(\n          ({\n            name,\n            quantity,\n            brand,\n            img,\n            attributes,\n            attributeName,\n            prices,\n          }) => {\n            let cartAmount = prices.filter(\n              (price) => price.currency.symbol === this.props.currency.symbol\n            )[0];\n            const amount = cartAmount.amount * quantity;\n            window.cartPageTotal.push(amount);\n            const cartTotAmount = window.cartTotal.reduce(function (acc, obj) {\n              return acc + obj;\n            }, 0);\n            window.cartPageAmount = cartTotAmount.toFixed(2);\n\n            const quandecre = attributeName;\n            const id = name;\n            const quandecrename = name;\n            const textindex = this.props.attrop;\n\n            return (\n              <>\n                <hr className=\"cartpage_hr\" />\n                <div className=\"cartPage_Container\">\n                  <div>\n                    <h2 className=\"cartpage_name\">{name}</h2>\n                    <h3 className=\"cartpage_brand\">{brand}</h3>\n                    <h4 className=\"cartpage_amount\">\n                      {cartAmount.currency.symbol}\n                      {cartAmount.amount}\n                    </h4>\n                    {attributes?.map(({ type, name, items }) => (\n                      <>\n                        <div className=\"cartpage_innerCon\"></div>\n                        <ProductAttribute\n                          name={name}\n                          item={items}\n                          type={type}\n                          initial={attributeName}\n                        />\n                      </>\n                    ))}\n                  </div>\n                  <div className=\"cartpage_downCon\">\n                    <button\n                      className=\"cartpage_quantityupdate\"\n                      onClick={() =>\n                        this.props.dispatch(addCart({ textindex, id }))\n                      }\n                    >\n                      +\n                    </button>\n                    <span className=\"cartpage_quantityContainer\">\n                      {quantity}\n                    </span>\n                    <button\n                      className=\"cartpage_quantityupdate\"\n                      onClick={() =>\n                        this.props.dispatch(\n                          addCart({ quandecre, textindex, quandecrename })\n                        )\n                      }\n                    >\n                      -\n                    </button>\n                  </div>\n                  <div>\n                    <img\n                      src={img[this.state.carousel]}\n                      alt=\"cart_image\"\n                      className=\"cartpage_image\"\n                    />\n                    <div className=\"carret_button_container\">\n                      <button\n                       className=\"carret_button\"\n                        style={{\n                          visibility:\n                            this.state.carousel <= 0 ? \"hidden\" : \"visible\",\n                        }}\n                        onClick={() => this.handleCarouselClick(\"sub\")}\n                      >\n                        {\"<\"}\n                      </button>\n                      <button\n                      className=\"carret_button\"\n                        style={{\n                          visibility:\n                            this.state.carousel === img.length - 1\n                              ? \"hidden\"\n                              : \"visible\",\n                        }}\n                        onClick={() => this.handleCarouselClick(\"add\")}\n                      >\n                        {\">\"}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            );\n          }\n        )}\n\n        <div className=\"cartpage_total\">\n          <span className=\"tax_span\">\n            Tax 21%:{((21 / 100) * window.cartPageAmount).toFixed(2)}\n          </span>\n          <span className=\"quantity_span\">Quantity:{this.props.qty}</span>\n          <span className=\"total_span\">\n            Total:{this.props.currency.symbol}\n            {window.cartPageAmount}\n          </span>\n          <button className=\"order_button\">ORDER</button>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart.value,\n  cartfil: state.cart.filt,\n  currency: state.currency.activeCurrency,\n  jet: state.cart.geto,\n  activeCategory: state.categoryName.value,\n  qty: state.cart.cartQuantity,\n  attrop: state.cart.attrid,\n});\nexport default connect(mapStateToProps)(Cart);\n","import React, { Component } from \"react\";\nimport { addCart } from \"../../../slices/cartSlice\";\nimport \"./productAttribute.css\";\nimport { connect } from \"react-redux\";\n\nclass ProductAttribute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeText: this.props.initial,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ activeText: this.props.initial });\n    }, 1000);\n  }\n  handleClick = (index) => {\n    const textindex = index;\n\n    this.setState({ activeText: textindex });\n\n    this.props.dispatch(addCart({ textindex }));\n  };\n  render() {\n    if (this.props.type === \"text\") {\n      return (\n        <>\n          <span>{this.props.name}:</span>\n          <div className=\"container\">\n            {this.props.item.map(({ value }, index) => {\n              return (\n                <>\n                  <div key={index}>\n                    <div\n                      className={`text_box ${\n                        this.state.activeText === index ? \"active_text\" : \"\"\n                      }`}\n                      onClick={() => this.handleClick(index)}\n                    >\n                      {value}\n                    </div>\n                  </div>\n                </>\n              );\n            })}\n          </div>\n        </>\n      );\n    }\n    if (this.props.type === \"swatch\")\n      return (\n        <>\n          <span>{this.props.name}:</span>\n          <div className=\"container\">\n            {this.props.item.map(({ value }, index) => {\n              return (\n                <>\n                  <div\n                    className=\"swatch_box\"\n                    style={{\n                      background: value,\n\n                      border:\n                        value === \"white\" || value === \"#FFFFFF\"\n                          ? `${1}px solid black`\n                          : \"none\",\n                      outlineStyle: \"solid\",\n                      outlineColor:\n                        this.state.activeText === index ? \"#5ECE7B\" : \"#fff\",\n                      outlineOffset: `${2}px`,\n                      outlineWidth: `${2}px`,\n                    }}\n                    key={index}\n                    onClick={() => this.handleClick(index)}\n                  ></div>\n                </>\n              );\n            })}\n          </div>\n        </>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  atttr: state.cart.attrid,\n});\n\nexport default connect(mapStateToProps)(ProductAttribute);\n"],"names":["Cart","props","state","carousel","handleCarouselClick","bind","type","this","setState","prevState","window","cartPageTotal","cartPageAmount","className","cartfil","map","name","quantity","brand","img","attributes","attributeName","cartAmount","prices","filter","price","currency","symbol","amount","push","cartTotAmount","cartTotal","reduce","acc","obj","toFixed","quandecre","id","quandecrename","textindex","attrop","items","item","initial","onClick","dispatch","addCart","src","alt","style","visibility","length","qty","Component","connect","cart","value","filt","activeCurrency","jet","geto","activeCategory","categoryName","cartQuantity","attrid","ProductAttribute","handleClick","index","activeText","setTimeout","background","border","outlineStyle","outlineColor","outlineOffset","outlineWidth","atttr"],"sourceRoot":""}