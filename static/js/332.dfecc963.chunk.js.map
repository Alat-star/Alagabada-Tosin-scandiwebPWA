{"version":3,"file":"static/js/332.dfecc963.chunk.js","mappings":"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","sources":["pages/Home/buckets/homeProducts/homeProducts.js","queries/productsQuery.js","pages/Home/Home.js"],"sourcesContent":["import getSvg from \"../../../../svg/getSvg\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCart } from \"../../../../slices/cartSlice\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./homeProducts.css\";\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      toast: false,\n    };\n  }\n\n  componentDidMount() {\n    const productCategory = this.props.match.params.product;\n    this.props.data.refetch({ newCategory: productCategory || \"all\" });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.activeCategory !== this.props.activeCategory) {\n      this.props.data.refetch({ newCategory: this.props.activeCategory });\n    }\n  }\n  handleClick(id, brand, image, attributes, prices) {\n    const textindex = 0;\n    this.props.dispatch(\n      addCart({ id, brand, image, attributes, textindex, prices })\n    );\n    this.setState({ toast: true });\n    setTimeout(() => {\n      this.setState({ toast: false });\n    }, 3000);\n  }\n\n  render() {\n    const {\n      data: { category, loading },\n    } = this.props;\n\n    if (loading) {\n      return <img alt=\"suspense_loader\" src={getSvg.loader} />;\n    } else {\n      return (\n        <>\n          <div className=\"category_Name\">\n            {this.props.activeCategory.toUpperCase()}\n          </div>\n          <div className=\"product_container\">\n            {this.state.toast ? (\n              <div className=\"toast\">Item added to cart!</div>\n            ) : null}\n            {category.products.map(\n              (\n                {\n                  name,\n                  gallery,\n                  brand,\n                  inStock,\n                  id,\n                  prices,\n                  category,\n                  attributes,\n                },\n                index\n              ) => {\n                /*filter function to get amount*/\n                let getAmount = prices.filter(\n                  (price) =>\n                    price.currency.symbol === this.props.currency.symbol\n                )[0];\n\n                const image = gallery[0];\n\n                return (\n                  <div\n                    key={index}\n                    className=\"item_container\"\n                    style={{ opacity: inStock ? \"1\" : \"0.5\" }}\n                  >\n                    <div>\n                      <img\n                        src={getSvg.addtocart}\n                        alt=\"cart_icon\"\n                        className=\"addto_cart\"\n                        style={{ opacity: !inStock && \"0\" }}\n                        onClick={() =>\n                          this.handleClick(\n                            name,\n                            brand,\n                            gallery,\n                            attributes,\n                            prices\n                          )\n                        }\n                      />\n                    </div>\n\n                    <Link to={`/${category}/${id}`}>\n                      <div className=\"image_container\">\n                        <img\n                          src={image}\n                          alt={name}\n                          className=\"product_images\"\n                        />\n                        {!inStock && (\n                          <h2 className=\"outof_stock\">OUT OF STOCK</h2>\n                        )}\n                      </div>\n                    </Link>\n                    <h3 className=\"product_name\">\n                      {brand} {name}\n                    </h3>\n                    <h4>\n                      {getAmount.currency.symbol}\n                      {getAmount.amount}\n                    </h4>\n                  </div>\n                );\n              }\n            )}\n          </div>\n        </>\n      );\n    }\n  }\n}\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categoryName.value,\n  currency: state.currency.activeCurrency,\n});\n\nexport default connect(mapStateToProps)(withRouter(ProductList));\n","import { graphql } from \"@apollo/client/react/hoc\";\nimport { gql } from \"@apollo/client\";\nimport Productlist from \"../pages/Home/buckets/homeProducts/homeProducts\";\n\nexport default graphql(\n  gql`\n    query ($newCategory: String!) {\n      category(input: { title: $newCategory }) {\n        products {\n          name\n          gallery\n          brand\n          inStock\n          id\n          category\n          attributes {\n            id\n            name\n            type\n            items {\n              displayValue\n              value\n              id\n            }\n          }\n          prices {\n            currency {\n              label\n              symbol\n            }\n            amount\n          }\n        }\n      }\n    }\n  `,\n  {\n    options: () => ({\n      variables: {\n        newCategory: \"all\",\n      },\n    }),\n  }\n)(Productlist);\n","import React, { Component } from \"react\";\nimport ProductList from \"../../queries/productsQuery\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <>\n        <ProductList />\n      </>\n    );\n  }\n}\n\nexport default Home;\n"],"names":["ProductList","props","handleClick","bind","state","toast","productCategory","this","match","params","product","data","refetch","newCategory","prevProps","activeCategory","id","brand","image","attributes","prices","dispatch","addCart","textindex","setState","setTimeout","category","loading","alt","src","getSvg","className","toUpperCase","products","map","index","name","gallery","inStock","getAmount","filter","price","currency","symbol","style","opacity","onClick","to","amount","Component","connect","categoryName","value","activeCurrency","withRouter","graphql","gql","options","variables","Productlist","Home"],"sourceRoot":""}